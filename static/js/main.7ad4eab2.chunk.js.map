{"version":3,"sources":["App.js","index.js"],"names":["osname","platform","require","App","props","onChange","event","target","value","name","console","log","setState","state","activeView","activePanel","activeTab","week","scheme","fetchedUser","id","first_name","groups","group","lessons","changes","popout","editGroup","choiseLessons","label","editLessons","onChangeLessons","bind","bridge","subscribe","detail","type","data","schemeAttribute","document","createAttribute","body","attributes","setNamedItem","send","then","catch","error","fetchData","this","getGroups","getWeek","moment","fetch","response","json","selectedOption","isAdmin","separator","left","onClick","IOS","mode","after","fill","width","height","selected","top","placeholder","icon","header","size","format","monday","map","lesson","index","disabled","before","time","description","teacher","asideContent","cabinet","key","discipline","Select","multiple","MenuItem","checked","ListItemText","primary","multiline","className","specialty","React","Component","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.7ad4eab2.chunk.js","sourcesContent":["import React from 'react'\nimport bridge from '@vkontakte/vk-bridge'\nimport {ConfigProvider, Root, View, Panel, PanelHeader, PanelHeaderClose, PanelHeaderBack, FormLayout, SelectMimicry,\n\tScreenSpinner,  Group, List, Card, Header, Cell, SimpleCell, TabsItem, Tabs, Separator, Placeholder, IOS, platform, PanelHeaderButton, Checkbox} from '@vkontakte/vkui/'\n//import  Select from 'react-select'\nimport moment from 'moment'\nimport Icon24Done from '@vkontakte/icons/dist/24/done'\n\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Select from '@material-ui/core/Select';\n\n\n\nimport Icon24AddOutline from '@vkontakte/icons/dist/24/add_outline'\nimport Icon28AddOutline from '@vkontakte/icons/dist/28/add_outline'\n\nimport Icon56Users3Outline from '@vkontakte/icons/dist/56/users_3_outline'\n\n\n\n\nimport '@vkontakte/vkui/dist/vkui.css'\n\nimport './style/style.css'\n//const moment = require('moment')\n\nconst osname = platform()\n\nrequire('moment/locale/ru')\n\nclass App extends React.Component{\n\tconstructor(props){\n\t\tsuper(props)\n\t\tthis.state = {\n\t\t\tactiveView: 'schedule',\n\t\t\tactivePanel: 'scheduleChanges',\n\t\t\tactiveTab: '',\n\t\t\tweek: null,\n\t\t\tscheme: 'space_gray',\n\t\t\tfetchedUser : {\n\t\t\t\tid: 111,\n\t\t\t\tfirst_name: 'User'\n\t\t\t},\n\t\t\tgroups: [],\n\t\t\tgroup: null,\n\t\t\tlessons:{},\n\t\t\tchanges: 'null',\n\t\t\tpopout: ''\n\t\t\t//<ScreenSpinner/>\n\t\t\t,\n\n\t\t\teditGroup: '',\n\t\t\tchoiseLessons:[\n\t\t\t\t{value: \"1\", label: '8:00 - 8:45'},\n\t\t\t\t{value: \"2\", label: '8:55 - 9:40'},\n\t\t\t\t{value: \"3\", label: '9:50 - 10:35'},\n\t\t\t\t{value: \"4\", label: '10:45 - 11:30'}\n\t\t\t\t// value={5}>11:45 - 12:30\n\t\t\t\t// value={6}>12:45 - 13:30\n\t\t\t\t// value={7}>14:00 - 14:45\n\t\t\t\t// value={8}>14:50 - 15:35\n\t\t\t\t// value={9}>15:40 - 16:25\n\t\t\t\t// value={10}>16:30 - 17:15\n\t\t\t\t// value={11}>17:20 - 18:05\n\t\t\t\t// value={12}>18:10 - 18:55\n\t\t\t],\n\t\t\teditLessons: [],\n\t\t}\n\t\tthis.onChangeLessons = this.onChangeLessons.bind(this)\n\t\tthis.onChange = this.onChange.bind(this)\n\t}\n\n\tcomponentDidMount () {\n\t\tbridge.subscribe(({ detail: { type, data }}) => {\n\t\t\tif (type === 'VKWebAppUpdateConfig') {\n\t\t\t\tconst schemeAttribute = document.createAttribute('scheme')\n\t\t\t\tschemeAttribute.value = data.scheme ? data.scheme : 'client_light'\n\t\t\t\tdocument.body.attributes.setNamedItem(schemeAttribute)\n\t\t\t}\n\t\t\tif (type === 'VKWebAppGetUserInfoResult') {\n\t\t\t\tthis.setState({fetchedUser: data})\n\t\t\t}\n\t\t})\n\t\tfunction fetchData() {\n\t\t\tbridge\n\t\t\t.send('VKWebAppGetUserInfo')\n\t\t\t.then(data => {\n\t\t\t\tthis.setState({fetchedUser: data})\n\t\t\t})\n\t\t\t.catch(error => {\n\t\t\t\tconsole.log(error)\n\t\t\t})\n\t\t}\n\t\tfetchData()\n\t\tthis.getGroups()\n\t\tthis.getWeek()\n\t}\n\tgetWeek(){\n\t\tlet week = moment().week() % 2\n\t\tconsole.log(week)\n\t\tweek ? this.setState({week, activeTab: 'lower week'}) : this.setState({week, activeTab: 'top week'})\n\t\t\n\t}\n\n\tasync getGroups(){\n\t\tlet response = await fetch('http://localhost:3000/groups/')\n\t\tlet data = await response.json()\n\t\tconsole.log(data)\n\t\tthis.setState({groups: data, popout: null})\n\t}\n\t// const go = e => {\n\t// \tsetActivePanel(e.currentTarget.dataset.to);\n\t// }\n\t\n\tonChangeLessons (selectedOption) {\n\t\t\n\t\t\n\t\t//this.setState({[event.target.name]: event.target.value})\n\t\t//console.log(event.target.name)\n\t\t\n\t}\n\tonChange = (event) => {\n\t\tconst {value, name} = event.target\n\t\tconsole.log(value)\n\n\t\tthis.setState({[name]: value})\n\t}\n\n\trender(){\n\t\tconst {scheme, activeView, activePanel, fetchedUser, groups, group, lessons, popout, editGroup, editLessons, activeTab, week, changes, choiseLessons} = this.state\n\t\tconst isAdmin = (fetchedUser.id === 111)\n\t\t// || fetchedUser.id === 144900226 || fetchedUser.id === 505378035)\n\n\t\t\n\t\t//console.log('admin '+isAdmin)\n\t\t//console.log(lessons)\n\t\t//console.log(groups)\n\t\tconsole.log(editLessons)\n\t\t\n\t\t//console.log(moment().format('DD MMMM'))\n\t\t\treturn(\n\t\t\t\t<ConfigProvider \n\t\t\t//\tscheme={scheme}\n\t\t\t\t>\n\t\t\t\t\t<Root activeView={activeView}>\n\t\t\t\t\t<View activePanel={activePanel} id=\"schedule\">\n\t\t\t\t\t<Panel id=\"schedule\">\n\t\t\t\t\t<PanelHeader separator={false} \n\t\t\t\t\t\tleft={isAdmin ?\n\t\t\t\t\t\t<PanelHeaderButton onClick={() => this.setState({activePanel: 'scheduleChanges'})}>\n\t\t\t\t\t\t\t{osname === IOS ? <Icon28AddOutline/> : <Icon24AddOutline/>}</PanelHeaderButton> : null}>\n\t\t\t\t\t\t\tРасписание\n\t\t\t\t\t</PanelHeader>\n\t\t\t\t\t\t<Tabs mode={ osname === IOS ? 'segmented' : 'default'}>\n\t\t\t\t \t\t<TabsItem\n\t\t\t\t\t\t \tafter={!week ? <Icon24Done  fill='var(--accent)' width={20} height={20}/> : null}\n\t\t\t\t \t\t\tonClick={() => this.setState({ activeTab: 'top week' })}\n\t\t\t\t \t\t\tselected={activeTab === 'top week'}>\n\t\t\t\t \t\t\tВерхняя неделя\n\t\t\t\t \t\t</TabsItem>\n\t\t\t\t \t\t<TabsItem\n\t\t\t\t\t\t\tafter={week ? <Icon24Done fill='var(--accent)' width={20} height={20}/> : null}\n\t\t\t\t \t\t\tonClick={() => this.setState({ activeTab: 'lower week' })}\n\t\t\t\t\t\t\tselected={activeTab === 'lower week'}\n\t\t\t\t\t\t>Нижняя неделя\n\t\t\t\t \t\t</TabsItem>\n\t\t\t\t \t\t</Tabs>\n\t\t\t\t\t\t<Separator />\n\t\t\t\t\t\t\n\t\t\t\t\t\t<FormLayout>\n\t\t\t\t\t\t<SelectMimicry\n\t\t\t\t\t\ttop=\"Выбери группу\"\n\t\t\t\t\t\tplaceholder=\"Не выбрана\"\n\t\t\t\t\t\tonClick={() => this.setState({activeView: \"selectGroup\"}) }\n\t\t\t\t\t\t>{group}</SelectMimicry>\n\t\t\t\t\t\t</FormLayout>\n\t\t\t\t\t\t{!group &&\n\t\t\t\t\t\t<Placeholder icon={<Icon56Users3Outline/>}\n\t\t\t\t\t\t\theader={`Привет, ${fetchedUser.first_name}!`}\n\t\t\t\t\t\t>Выбери группу и мы покажем расписание</Placeholder>}\n\t\t\t\t\t\t{group  &&\n\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t{changes &&\n\t\t\t\t\t\t\t\t<Card size='l' mode=\"tint\">\n\t\t\t\t\t\t\t\t\t<Header mode=\"primary\">Изменения в расписании {moment().format('DD MMMM')}</Header>\n\t\t\t\t\t\t\t\t\t<Cell>\n\t\t\t\t\t\t\t\t\t\tфолфалоф\n\t\t\t\t\t\t\t\t\t</Cell>\n\t\t\t\t\t\t\t\t</Card>\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t{activeTab === 'lower week' ?\n\t\t\t\t\t\t\t(<>\n\t\t\t\t\t\t\t<Card size='l' mode=\"tint\">\n\t\t\t\t\t\t\t\t<Header mode=\"primary\">Понедельник низ</Header>\n\t\t\t\t\t\t\t\t{lessons.monday.map((lesson, index) => \n\t\t\t\t\t\t\t\t\t<Cell disabled={true} before={lesson.time} description={lesson.teacher} asideContent={lesson.cabinet} key={index}>\n\t\t\t\t\t\t\t\t\t\t{lesson.discipline}\n\t\t\t\t\t\t\t\t\t</Cell>)}\n\t\t\t\t\t\t\t</Card>\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t</>)\n\t\t\t\t\t\t\t: (\n\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t<Card size='l' mode=\"tint\">\n\t\t\t\t\t\t\t\t<Header mode=\"primary\">Понедельник верх</Header>\n\t\t\t\t\t\t\t\t{lessons.monday.map((lesson, index) => \n\t\t\t\t\t\t\t\t\t<Cell disabled={true} before={lesson.time} description={lesson.teacher} asideContent={lesson.cabinet} key={index}>\n\t\t\t\t\t\t\t\t\t\t{lesson.discipline}\n\t\t\t\t\t\t\t\t\t</Cell>)}\n\t\t\t\t\t\t\t</Card>\n\t\t\t\t\t\t\t</>)}\n\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t}\n\t\t\t\t\t</Panel>\n\t\t\t\t\t<Panel id='scheduleChanges'>\n\t\t\t\t\t\t\t<PanelHeader left={<PanelHeaderBack onClick={() => this.setState({activePanel: 'schedule'})}/>}>\n\t\t\t\t\t\t\t\tДобавить изменения\n\t\t\t\t\t\t\t</PanelHeader>\n\t\t\t\t\t\t\t<FormLayout>\n\t\t\t\t\t\t\t<Select name='editGroup' value={editGroup} onChange={this.onChange} \n\t\t\t\t\t\t\ttop='Группа' placeholder='Выберите группу'>\n\t\t\t\t\t\t\t{groups.map((groups, index) =>\n\t\t\t\t\t\t\t<option value={groups.group} key={index}\n\t\t\t\t\t\t\t>{groups.group}</option>)}\n\t\t\t\t\t\t\t</Select>\n\n\t\t\t\t\t\t\t<Select multiple name=\"editGroup\" value={editLessons} onChange={this.onChange} \n\t\t\t\t\t\t\ttop='Группа' placeholder='Выберите группу'>\n\t\t\t\t\t\t\t{choiseLessons.map((lesson, index) => (\n\t\t\t\t\t\t\t<MenuItem key={lesson.value} value={lesson.value}>\n\t\t\t\t\t\t\t\t<Checkbox checked={editLessons.value}/>\n\t\t\t\t\t\t\t\t<ListItemText primary={lesson.label} />\n\t\t\t\t\t\t\t</MenuItem>))}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t</Select>\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t{/* <SelectMimicry name='editLessons'\n\t\t\t\t\t\t\tonClick={() => this.setState({activePanel: 'choiseLessons'})}\n\t\t\t\t\t\t\ttop='Уроки' placeholder='Выберите уроки'\n\t\t\t\t\t\t\t>{editLessons}\n\t\t\t\t\t\t\t</SelectMimicry> */}\n\t\t\t\t\t\t\t</FormLayout>\n\t\t\t\t\t</Panel>\n\t\t\t\t\t<Panel id='choiseLessons'>\n\t\t\t\t\t\t<PanelHeader left={<PanelHeaderBack onClick={() => this.setState({activePanel: 'scheduleChanges'})}/>}>\n\t\t\t\t\t\t\tУроки\n\t\t\t\t\t\t</PanelHeader>\n\t\t\t\t\t\t<Group>\n\t\t\t\t\t\t\t<List>\n\t\t\t\t\t\t\t\t{/* {choiseLessons.map((lesson, index) =>\n\t\t\t\t\t\t\t\t<Checkbox name='editLessons' value={lesson.value}\n\t\t\t\t\t\t\t\tonChange={this.onChangeLessons}\n\t\t\t\t\t\t\t\tdefaultChecked={editLessons.value}\n\t\t\t\t\t\t\t\tchecked={editLessons.includes(lesson.value)}\n\t\t\t\t\t\t\t\tkey={index}>\n\t\t\t\t\t\t\t\t\t{lesson.time}</Checkbox>\n\t\t\t\t\t\t\t\t)} */}\n\t\t\t\t\t\t\t</List>\n\t\t\t\t\t\t</Group>\n\t\t\t\t\t</Panel>\n\t\t\t\t\t</View>\n\t\t\t\t\t\t<View activePanel='selectGroup' id=\"selectGroup\">\n\t \t\t\t\t\t<Panel id='selectGroup'>\n\t\t\t\t\t\t\t<PanelHeader \n\t\t\t\t\t\t\tleft={<PanelHeaderClose onClick={() =>this.setState({activeView:'schedule'})}/>}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t{osname === IOS ? 'Группа' : 'Выбор группы'}\n\t \t\t\t\t\t</PanelHeader>\n\t \t\t\t\t\t<Group>\n                \t\t<List>\n\t\t\t\t\t\t{groups.map((groups, index) =>\n\t \t\t\t\t\t\t<Cell multiline={true} className='cell' onClick={() => this.setState({group: groups.group, lessons: groups.lessons, activeView: \"schedule\"})}\n\t \t\t\t\t\t\tbefore={groups.group} asideContent={group === groups.group ? <Icon24Done fill=\"var(--accent)\" /> : null} key={index}>\n\t \t\t\t\t\t\t{groups.specialty}\n\t \t\t\t\t\t</Cell>)}\n             \t\t\t</List>\n             \t\t\t</Group>\n\t \t\t\t\t\t</Panel>\n\t \t\t\t\t\t</View>\n\t\t\t\t\t\t\n\t\t\t\t\t</Root>\n\t\t\t\t</ConfigProvider>\n\n\n\t\t\t\t\n\t\t\t)\n\t// \tif(isAdmin){\n\t// \t\treturn(\n\t// \t\t\t<ConfigProvider \n\t// \t\t\tscheme={scheme}\n\t// \t\t\t>\n\t\t\t\t\t\n\t// \t\t\t</ConfigProvider>\n\t// \t\t)\n\t// \t}\n\t// \telse return (\n\t// \t\t\n\t\t\t\t\n    //         </Panel>\n    //       </View>\n\t// \t\n\t// \t<View id='scheduleChanges' activePanel='scheduleChanges'>\n\t// \t\t\t\t\t<Panel id='scheduleChanges' >\n\t// \t\t\t\t\t\t<PanelHeader left={<PanelHeaderClose onClick={() =>this.setState({activeView:'home'})}/>}>\n\t// \t\t\t\t\t\t\tДобавить изменения\n\t// \t\t\t\t\t\t</PanelHeader>\n\t// \t\t\t\t\t\t<FormLayout>\n\t// \t\t\t\t\t\t<Select name='editGroup' value={editGroup} onChange={this.onChange} top='Группа' placeholder='Выберите группу'>\n\t// \t\t\t\t\t\t{groups.map((groups, index) =>\n\t// \t\t\t\t\t\t<option value={groups.group} key={index}\n\t// \t\t\t\t\t\t>{groups.group}</option>)}\n\t// \t\t\t\t\t\t</Select>\n\t// \t\t\t\t\t\t</FormLayout>\n\t// \t\t\t\t\t</Panel>\n\t// \t\t\t\t</View>\n\t// \t</Root>\n\t// </ConfigProvider>\n\t//)\n\t}\n}\n\n\nexport default App;\n\n","import \"core-js/features/map\";\nimport \"core-js/features/set\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport bridge from \"@vkontakte/vk-bridge\";\nimport App from \"./App\";\n\n// Init VK  Mini App\nbridge.send(\"VKWebAppInit\");\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nif (process.env.NODE_ENV === \"development\") {\n  import(\"./eruda\").then(({ default: eruda }) => {}); //runtime download\n}\n"],"sourceRoot":""}